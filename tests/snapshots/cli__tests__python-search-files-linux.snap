---
source: tests/cli.rs
expression: "CommandSnap\n{\n    args, stdin:\n    stdin.map(|s|\n    s.split_inclusive('\\n').map(ToOwned::to_owned).collect_vec()), stdout:\n    stdout.split_inclusive('\\n').map(ToOwned::to_owned).collect_vec(),\n    exit_code,\n}"
info:
  stderr: []
---
args:
  - "--sorted"
  - "--python"
  - strings
  - is
stdin: ~
stdout:
  - "tests/langs/python/base.py:24:28-30:    print(f\"Global test_var is now {test_var}\")\n"
  - "tests/langs/python/base.py:66:31-33:        print(f\"Class variable is now {cls.class_var}\")\n"
  - "tests/langs/python/base.py:72:34-36:        print(f\"Instance variable is {self.instance_var}\")\n"
  - "tests/langs/python/base.py:86:2-4;5-7:This is a\n"
  - "tests/langs/python/base.py:91:27-29;30-32:multiline_f_string = f\"\"\"This is a\n"
  - "tests/langs/python/base.py:96:17-19;20-22:raw_string = r\"This is a raw string with no special treatment for \\n\"\n"
  - "tests/langs/python/base.py:97:19-21;22-24:bytes_string = b\"This is a bytes string\"\n"
  - "tests/langs/python/base.py:98:20-22;23-25:bytes_string = rf\"This is a raw f-string with {raw_string}\"\n"
  - "tests/langs/python/base.py:118:40-42:            raise ZeroDivisionError(\"Division by zero\")\n"
  - "tests/langs/python/base.py:127:17-19:        print(\"This will always be printed\")\n"
  - "tests/langs/python/base.py:140:30-32:    print(f\"Nonlocal variable is {nonlocal_var}\")\n"
  - "tests/langs/python/base.py:158:24-26:        print(\"test_var is greater than 5\")\n"
  - "tests/langs/python/base.py:160:24-26:        print(\"test_var is 5 or less\")\n"
  - "tests/langs/python/base.py:165:24-26:        print(f\"Counter is {counter}\")\n"
exit_code: 0
