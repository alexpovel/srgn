---
source: tests/langs/mod.rs
expression: inscope_parts
---
- n: 77
  l: "resource \"aws_instance\" \"app_server\" {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 78
  l: "  count         = var.instance_count\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 79
  l: "  ami           = data.aws_ami.latest_ubuntu.id\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 80
  l: "  instance_type = \"t2.micro\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 81
  l: "  tags = {\n"
  m: ^^^^^^^^^^^^
- n: 82
  l: "    Name        = \"${var.app_name}-${count.index}\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 83
  l: "    Environment = local.app_env\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 84
  l: "    Version     = local.version\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 85
  l: "  }\n"
  m: ^^^^^
- n: 86
  l: "\n"
  m: ^^
- n: 87
  l: "  // Dynamic block for user data\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 88
  l: "  dynamic \"user_data\" {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 89
  l: "    for_each = var.enable_feature_x ? [1] : []\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 90
  l: "    content {\n"
  m: ^^^^^^^^^^^^^^^
- n: 91
  l: "      data = <<EOF\n"
  m: ^^^^^^^^^^^^^^^^^^^^
- n: 92
  l: "#!/bin/bash\n"
  m: ^^^^^^^^^^^^^
- n: 93
  l: "echo \"Feature ${upper(var.app_name)} enabled\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 94
  l: "EOF\n"
  m: ^^^^^
- n: 95
  l: "    }\n"
  m: ^^^^^^^
- n: 96
  l: "  }\n"
  m: ^^^^^
- n: 97
  l: "}\n"
  m: "^  "
- n: 117
  l: "resource \"aws_s3_bucket\" \"app_bucket\" {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 118
  l: "  bucket = var.enable_feature_x ? \"${var.app_name}-feature-x\" : \"${var.app_name}\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 119
  l: "  acl    = \"private\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^
- n: 120
  l: "}\n"
  m: "^  "
- n: 123
  l: "resource \"null_resource\" \"template_example\" {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 124
  l: "  provisioner \"local-exec\" {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 125
  l: "    command = <<EOT\n"
  m: ^^^^^^^^^^^^^^^^^^^^^
- n: 126
  l: "echo \"Application: ${var.app_name}\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 127
  l: "echo \"Environment: ${local.app_env}\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 128
  l: "EOT\n"
  m: ^^^^^
- n: 129
  l: "  }\n"
  m: ^^^^^
- n: 130
  l: "}\n"
  m: "^  "
- n: 133
  l: "resource \"aws_security_group\" \"web_sg\" {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 134
  l: "  name        = \"${var.app_name}-web-sg\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 135
  l: "  description = \"Web security group for ${var.app_name}\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 136
  l: "  vpc_id      = module.network.vpc_id\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 137
  l: "\n"
  m: ^^
- n: 138
  l: "  ingress {\n"
  m: ^^^^^^^^^^^^^
- n: 139
  l: "    from_port   = 80\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^
- n: 140
  l: "    to_port     = 80\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^
- n: 141
  l: "    protocol    = \"tcp\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 142
  l: "    cidr_blocks = [\"0.0.0.0/0\"]\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 143
  l: "  }\n"
  m: ^^^^^
- n: 144
  l: "\n"
  m: ^^
- n: 145
  l: "  egress {\n"
  m: ^^^^^^^^^^^^
- n: 146
  l: "    from_port   = 0\n"
  m: ^^^^^^^^^^^^^^^^^^^^^
- n: 147
  l: "    to_port     = 0\n"
  m: ^^^^^^^^^^^^^^^^^^^^^
- n: 148
  l: "    protocol    = \"-1\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 149
  l: "    cidr_blocks = [\"0.0.0.0/0\"]\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 150
  l: "  }\n"
  m: ^^^^^
- n: 151
  l: "}\n"
  m: "^  "
- n: 154
  l: "resource \"aws_iam_role\" \"app_role\" {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 155
  l: "  name = \"${var.app_name}_role\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 156
  l: "\n"
  m: ^^
- n: 157
  l: "  assume_role_policy = jsonencode({\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 158
  l: "    Version = \"2012-10-17\",\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 159
  l: "    Statement = [\n"
  m: ^^^^^^^^^^^^^^^^^^^
- n: 160
  l: "      {\n"
  m: ^^^^^^^^^
- n: 161
  l: "        Action = \"sts:AssumeRole\",\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 162
  l: "        Effect = \"Allow\",\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 163
  l: "        Principal = {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^
- n: 164
  l: "          Service = \"ec2.amazonaws.com\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 165
  l: "        }\n"
  m: ^^^^^^^^^^^
- n: 166
  l: "      }\n"
  m: ^^^^^^^^^
- n: 167
  l: "    ]\n"
  m: ^^^^^^^
- n: 168
  l: "  })\n"
  m: ^^^^^^
- n: 169
  l: "\n"
  m: ^^
- n: 170
  l: "  inline_policy {\n"
  m: ^^^^^^^^^^^^^^^^^^^
- n: 171
  l: "    name = \"app_policy\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 172
  l: "\n"
  m: ^^
- n: 173
  l: "    policy = jsonencode({\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 174
  l: "      Version = \"2012-10-17\",\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 175
  l: "      Statement = [\n"
  m: ^^^^^^^^^^^^^^^^^^^^^
- n: 176
  l: "        {\n"
  m: ^^^^^^^^^^^
- n: 177
  l: "          Action   = [\"s3:ListBucket\"],\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 178
  l: "          Effect   = \"Allow\",\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 179
  l: "          Resource = \"*\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 180
  l: "        }\n"
  m: ^^^^^^^^^^^
- n: 181
  l: "      ]\n"
  m: ^^^^^^^^^
- n: 182
  l: "    })\n"
  m: ^^^^^^^^
- n: 183
  l: "  }\n"
  m: ^^^^^
- n: 184
  l: "}\n"
  m: "^  "
