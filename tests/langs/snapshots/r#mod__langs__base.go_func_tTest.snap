---
source: tests/langs/mod.rs
expression: inscope_parts
---
- n: 97
  l: "func runTests(t *testing.T, tests ...TestFunction) {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 98
  l: "\tfor _, test := range tests {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 99
  l: "\t\ttest(t)\n"
  m: ^^^^^^^^^^^^^
- n: 100
  l: "\t}\n"
  m: ^^^^^
- n: 101
  l: "}\n"
  m: "^  "
- n: 104
  l: "func TestMain(m *testing.M) {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 105
  l: "\t// Setup\n"
  m: ^^^^^^^^^^^^
- n: 106
  l: "\tdefer func() {\n"
  m: ^^^^^^^^^^^^^^^^^^
- n: 107
  l: "\t\t// Defer statement\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^
- n: 108
  l: "\t\tfmt.Println(\"Cleanup after tests\")\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 109
  l: "\t}()\n"
  m: ^^^^^^^
- n: 110
  l: "\n"
  m: ^^
- n: 111
  l: "\t// Run tests\n"
  m: ^^^^^^^^^^^^^^^^
- n: 112
  l: "\tm.Run()\n"
  m: ^^^^^^^^^^^
- n: 113
  l: "}\n"
  m: "^  "
- n: 116
  l: "func TestSample(t *testing.T) {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 117
  l: "\t// Short variable declaration\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 118
  l: "\tx := 42\n"
  m: ^^^^^^^^^^^
- n: 119
  l: "\n"
  m: ^^
- n: 120
  l: "\t// If statement\n"
  m: ^^^^^^^^^^^^^^^^^^^
- n: 121
  l: "\tif x > 0 {\n"
  m: ^^^^^^^^^^^^^^
- n: 122
  l: "\t\tt.Log(\"Positive number\")\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 123
  l: "\t} else {\n"
  m: ^^^^^^^^^^^^
- n: 124
  l: "\t\tt.Error(\"Non-positive number\")\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 125
  l: "\t}\n"
  m: ^^^^^
- n: 126
  l: "\n"
  m: ^^
- n: 127
  l: "\t// Switch statement\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^
- n: 128
  l: "\tswitch {\n"
  m: ^^^^^^^^^^^^
- n: 129
  l: "\tcase x < 0:\n"
  m: ^^^^^^^^^^^^^^^
- n: 130
  l: "\t\tt.Error(\"Negative number\")\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 131
  l: "\tcase x == 0:\n"
  m: ^^^^^^^^^^^^^^^^
- n: 132
  l: "\t\tt.Error(\"Zero\")\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^
- n: 133
  l: "\tdefault:\n"
  m: ^^^^^^^^^^^^
- n: 134
  l: "\t\tt.Log(\"Positive number\")\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 135
  l: "\t}\n"
  m: ^^^^^
- n: 136
  l: "\n"
  m: ^^
- n: 137
  l: "\t// For loop\n"
  m: ^^^^^^^^^^^^^^^
- n: 138
  l: "\tsum := 0\n"
  m: ^^^^^^^^^^^^
- n: 139
  l: "\tfor i := 1; i <= 10; i++ {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 140
  l: "\t\tsum += i\n"
  m: ^^^^^^^^^^^^^^
- n: 141
  l: "\t}\n"
  m: ^^^^^
- n: 142
  l: "\n"
  m: ^^
- n: 143
  l: "\t// Assert\n"
  m: ^^^^^^^^^^^^^
- n: 144
  l: "\tif sum != 55 {\n"
  m: ^^^^^^^^^^^^^^^^^^
- n: 145
  l: "\t\tt.Errorf(\"Expected sum to be 55, got %d\", sum)\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 146
  l: "\t}\n"
  m: ^^^^^
- n: 147
  l: "\n"
  m: ^^
- n: 148
  l: "\t// Goroutine and channel usage\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 149
  l: "\tgo func() {\n"
  m: ^^^^^^^^^^^^^^^
- n: 150
  l: "\t\ttestChannel <- TestCase{Name: \"async test\", Input: 1, Expected: 1}\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 151
  l: "\t}()\n"
  m: ^^^^^^^
- n: 152
  l: "\n"
  m: ^^
- n: 153
  l: "\t// Select statement\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^
- n: 154
  l: "\tselect {\n"
  m: ^^^^^^^^^^^^
- n: 155
  l: "\tcase tc := <-testChannel:\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 156
  l: "\t\tt.Logf(\"Received test case: %s\", tc.Name)\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 157
  l: "\tcase <-time.After(1 * time.Second):\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 158
  l: "\t\tt.Error(\"Timeout waiting for test case\")\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 159
  l: "\t}\n"
  m: ^^^^^
- n: 160
  l: "\n"
  m: ^^
- n: 161
  l: "\t// Panic and recover\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^
- n: 162
  l: "\tdefer func() {\n"
  m: ^^^^^^^^^^^^^^^^^^
- n: 163
  l: "\t\tif r := recover(); r != nil {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 164
  l: "\t\t\tt.Log(\"Recovered from panic:\", r)\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 165
  l: "\t\t}\n"
  m: ^^^^^^^
- n: 166
  l: "\t}()\n"
  m: ^^^^^^^
- n: 167
  l: "\n"
  m: ^^
- n: 168
  l: "\t// Intentional panic\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^
- n: 169
  l: "\tif debugMode {\n"
  m: ^^^^^^^^^^^^^^^^^^
- n: 170
  l: "\t\tpanic(\"This is a debug panic\")\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 171
  l: "\t}\n"
  m: ^^^^^
- n: 172
  l: "}\n"
  m: "^  "
- n: 182
  l: "func ExampleTestCase_Run() {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 183
  l: "\ttc := TestCase{Name: \"example\", Input: 2, Expected: 4}\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 184
  l: "\tfmt.Printf(\"Running test case: %s\\n\", tc.Name)\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 185
  l: "\t// Output: Running test case: example\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 186
  l: "}\n"
  m: "^  "
